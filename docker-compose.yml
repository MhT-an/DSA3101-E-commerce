version: '3.8'

services:
  query-service:
    build:
      context: .
      dockerfile: ./data_scripts/Dockerfile
    working_dir: /query
    volumes:
      - ./data_scripts:/query/scripts           ### Python scripts go here
      - data:/data                   ### csv go here
      - ./requirements.txt:/query/requirements.txt
      - ./.env:/query/.env
    healthcheck:
      test: ["CMD", "test", "-f", "/shared-data/.ready"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    entrypoint: ["./entrypoint.sh"]

    

  notebook-runner:
    build:
      context: .       
      dockerfile: ./Notebooks/Dockerfile
    volumes:
      - data:/data
      - ./Notebooks:/project
      - ./requirements.txt:/project/requirements.txt
    environment:
      - PYTHONUNBUFFERED=1  
    command: >
      find /project/Subgroup_A /project/Subgroup_B -type f -name "*.ipynb" 
      -exec jupyter nbconvert --to notebook --execute --inplace {} \;
    depends_on:
      - query-service
    profiles: ["post-query"]

  src-service:
    build:
      context: .   
      dockerfile: src/Dockerfile
    volumes:
      - data:/data
      - ./src:/app       
      - ./requirements.txt:/app/requirements.txt  # Mount requirements.txt to container
    env_file:
      - .env   
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
     - query-service
    profiles: ["post-query"]
    ports:
      - "8050:8050"
    command: python app.py

volumes:
  data:
    driver: local