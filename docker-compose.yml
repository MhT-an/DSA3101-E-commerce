version: '3.8'

services:
  query-service:
    build:
      context: .
      dockerfile: Data/Dockerfile
    command: >
      bash -c "for file in /app/Data/*.py; do
                  echo 'Processing $file...';
                  python $file;
                  echo 'Finished $file';
                done && cp /app/Data/* /data"
    volumes:
      - ./Data:/app/Data           ### Python scripts go here
      - data:/data                   ### csv go here
      - ./requirements.txt:/app/requirements.txt
    healthcheck:
      test: >
        bash -c "
          FILE_COUNT=$(ls /data | wc -l);
          if [ $FILE_COUNT -eq 19 ]; then
            echo 'All files written';
            exit 0;
          else
            echo 'Waiting for all files to be written';
            exit 1;
          fi
        "
      interval: 30s     # Check every 30 seconds
      timeout: 10s      # Timeout for each check
      retries: 5        # Retry 5 times before marking as unhealthy
      start_period: 30s # Wait 30 seconds before the first check

    

  notebook-runner:
    build:
      context: .       
      dockerfile: Notebooks/Dockerfile
    volumes:
      - data:/data
      - ./Notebooks:/project
      - ./requirements.txt:/project/requirements.txt
    environment:
      - PYTHONUNBUFFERED=1  
    command: >
      find /project/Subgroup_A /project/Subgroup_B -type f -name "*.ipynb" 
      -exec jupyter nbconvert --to notebook --execute --inplace {} \;
    depends_on:
      query-service:
        condition: service_healthy

  src-service:
    build:
      context: .   
      dockerfile: src/Dockerfile
    volumes:
      - data:/data
      - ./src:/app       
      - ./requirements.txt:/app/requirements.txt  # Mount requirements.txt to container
    env_file:
      - .env   
    environment:
      - PYTHONUNBUFFERED=1
    ports:
      - "8050:8050"
    command: python app.py
    depends_on:
     query-service:
        condition: service_healthy

volumes:
  data:
    driver: local